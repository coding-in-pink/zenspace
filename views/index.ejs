
<!DOCTYPE html>
<html>
  <head>
    <title>Zenspace</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <link rel='stylesheet', href='/css/style.css'>
    <script type='text/javascript', src='/js/browser-detect.js'></script>
    <script type='text/javascript', src='/js/jquery-1.11.1.min.js'></script>
    <script type='text/javascript', src='/js/speech-recognizer.js'></script>
    <script type='text/javascript', src='/js/socket.io.js'></script>
    <script type='text/javascript', src='/js/demo.js'></script>
    <script src="/js/utils.js"></script>
    <script src="/js/clmtrackr.min.js"></script>
    <script src="/js/model_pca_20_svm_emotionDetection.js"></script>
    <script src="/js/stats.min.js"></script>
    <script src="/js/d3.min.js"></script>
    <script src="/js/emotion_classifier.js"></script>
    <script src="/js/emotionmodel.js"></script>
    <script src="/js/d3.min.js"></script>
    <script src="/js/d3.layout.min.js"></script>
    <script src="/js/rickshaw.min.js"></script>
    <link href='/images/zenspace-logo.png'>
  </head>

  <body>

    <% include layout.ejs %>

    <section class="left-adjust">
        <div class="section no-pad-bot" id="index-banner">
            <div class="container">
                <br>
                <br>
                <div class="row center">
                    <img src="/images/zenspace-logo.png" id="zenspace-logo"></img>
                </div>
                <br>
                <div class="row center">
                    <a href="#" id="download-button" class="btn-large waves-effect waves-light orange" onclick="genCard($('.value-prop'))">Get Started</a>
                </div>
            </div>
        </div>
        <div class="value-prop container">
            <div class="section" id="value-child">
                <!--   Icon Section   -->
                <div class="row">
                    <div class="col s12 m4">
                        <div class="icon-block">
                            <h2 class="center light-blue-text"><!--i class="mdi-action-accessibility"--><i class="mdi-social-school"></i></h2>
                            <h5 class="center">Research Driven</h5>
                            <p class="light">
                                By utilizing MEMS sensors, physical metrics, and self-reported data, we are able to empower astronauts and citizen scientists alike to take actional steps towards improving their health outcomes.
                            </p>
                        </div>
                    </div>
                    <div class="col s12 m4">
                        <div class="icon-block">
                            <h2 class="center light-blue-text"><i class="mdi-social-group"></i></h2>
                            <h5 class="center">User Experience Focused</h5>
                            <p class="light">We present a delightful and unified framework that incorporates contextually-aware components and animations that provide actionable feedback towards users.
                            </p>
                        </div>
                    </div>
                    <div class="col s12 m4">
                        <div class="icon-block">
                            <h2 class="center light-blue-text"><i class="mdi-social-public"></i></h2>
                            <h5 class="center">Galatic Impact</h5>
                            <p class="light">Join us in our voyage across the universe as we continue to push the boundaries of space travel.</p>
                        </div>
                    </div>
                </div>
                <br>
                <br>
            </div>
        </div>

        <div class="value-prop container" id="video-space">
            <div class="section" id="value-child">
<!--             <section class="left-adjust">
 -->    <!--             <div class="micButton" value="wait, loading video" disabled="disabled" onclick="startVideo()" id="startbutton">Press to start speaking</div> -->
                <div class="col-md-8">
                    <div class="row">
<!--                         <p class="micButton" align = "center" disabled="disabled" onclick="startVideo()" id="startbutton">Press to start speaking</p>
 -->                    <div class = "errorMsg"></div>
                    </div>
                    <div class="row">
                        <video id="videoel" width="100%" height="100%" preload="auto" loop>
                        </video>
                        <canvas id="overlay" width="100%" height="100%"></canvas>
                    </div>
                    <div class="row">
                        <div id="chart"></div>
                        <p id="sad-average"></p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="micButton" value="wait, loading video" disabled="disabled" onclick="startVideo()" id="startbutton"></div>
            <p class="micText">Press to start speaking</p>
                    <div class = "panel panel-default">
                        <div class="panel-heading">Transcriptions</div>
                        <div class="panel-body" id="speech-text">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <% include footer.ejs %>
    </section>
    <script>
        var socket = io.connect(this.ws);
        var vid = document.getElementById('videoel');
        var overlay = document.getElementById('overlay');
        var overlayCC = overlay.getContext('2d');
        var averages = {
            angry: 0,
            sad: 0,
            surprised: 0,
            happy: 0
        }
        var average = 0;
        var count = 0;
        var total = 0;
        var avg = [];
        var graph = new Rickshaw.Graph( {
            element: document.querySelector("#chart"),
            height: 250,
            series: [ {
                    color: 'steelblue',
                    data: avg
            } ]
        } );
        
        /********** check and set up video/webcam **********/
        function enablestart() {
            var startbutton = document.getElementById('startbutton');
            startbutton.value = "start";
            startbutton.disabled = null;
        }
        
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
        window.URL = window.URL || window.webkitURL || window.msURL || window.mozURL;
        // check for camerasupport
        if (navigator.getUserMedia) {
            // set up stream
            
            var videoSelector = {video : true};
            if (window.navigator.appVersion.match(/Chrome\/(.*?) /)) {
                var chromeVersion = parseInt(window.navigator.appVersion.match(/Chrome\/(\d+)\./)[1], 10);
                if (chromeVersion < 20) {
                    videoSelector = "video";
                }
            };
        
            navigator.getUserMedia(videoSelector, function( stream ) {
                if (vid.mozCaptureStream) {
                    vid.mozSrcObject = stream;
                } else {
                    vid.src = (window.URL && window.URL.createObjectURL(stream)) || stream;
                }
                vid.play();
            }, function() {
                //insertAltVideo(vid);
                alert("There was some problem trying to fetch video from your webcam. If you have a webcam, please make sure to accept when the browser asks for access to your webcam.");
            });
        } else {
            //insertAltVideo(vid);
            alert("This demo depends on getUserMedia, which your browser does not seem to support. :(");
        }
        vid.addEventListener('canplay', enablestart, false);
        
        /*********** setup of emotion detection *************/
        var ctrack = new clm.tracker({useWebGL : true});
        ctrack.init(pModel);
        function startVideo() {
            // start video
            vid.play();
            // start tracking
            ctrack.start(vid);
            // start loop to draw face
            drawLoop();
            // startSpeechToText();
        }
        function drawLoop() {
            requestAnimFrame(drawLoop);
            var cp = ctrack.getCurrentParameters();
            var er = ec.meanPredict(cp);
            if (er) {
                count += 1;
                total += er[1].value;
                average = total / count;
                avg.push({
                    x: new Date().getTime(),
                    y: average
                });
                document.getElementById("sad-average").innerHTML = average;
                graph.render(); 
            }
        }
        
        var ec = new emotionClassifier();
        ec.init(emotionModel);
        var emotionData = ec.getBlank();        
            
    </script>
    </body>
</html>
