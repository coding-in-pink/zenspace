<!DOCTYPE html>
<html>
  <head>
    <title>Zenspace</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <script type='text/javascript', src='/js/browser-detect.js'></script>
    <script type='text/javascript', src='/js/jquery-1.11.1.min.js'></script>
    <script type='text/javascript', src='/js/speech-recognizer.js'></script>
    <script type='text/javascript', src='/js/socket.io.js'></script>
    <script type='text/javascript', src='/js/demo.js'></script>
    <script src="/js/utils.js"></script>
    <script src="/js/clmtrackr.min.js"></script>
    <script src="/js/model_pca_20_svm_emotionDetection.js"></script>
    <script src="/js/stats.min.js"></script>
    <script src="/js/d3.min.js"></script>
    <script src="/js/emotion_classifier.js"></script>
    <script src="/js/emotionmodel.js"></script>
    <script src="/js/d3.min.js"></script>
    <script src="/js/d3.layout.min.js"></script>
    <script src="/js/rickshaw.min.js"></script>
  </head>
  <style>
    #final-score {
        text-align: center;
        font-size: 100px;
    }
    #facial-chart {
        margin-left: auto;
        margin-right: auto;
        width: 100%;
        position: relative;
        text-align: center;
        padding-top: 15px;
    }
    #cont {
        margin-left: 200px;
    }
  </style>

  <body>
    <% include layout.ejs %>
    </br>

    <div id="cont">
        <div class="container">
            <div class="progress">
              <div id="progress_1" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" height="50px" style="width: 50%">
              </div>
            </div>
            <div id="facial-chart"></div>
            <div id="speech-text"></div>
        </div>
    </div>
  </body>

    <script>
        var socket = io.connect(this.ws);
        var avgs = [];
        var values = [];
        socket.on('identity', function(data) {
            socket.emit('identity', 'analysis');
        });
        socket.on('facial-analysis', function(data) {
            var value = {
                x: data.timestamp,
                y: data.current_value
            };
            // var avg = {
            //     x: data.timestamp,
            //     y: data.average
            // };

            values.push(value);
            avgs.push(data.average);
            graph.render();
            updateScore();
        });

        var graph = new Rickshaw.Graph( {
            element: document.getElementById("facial-chart"),
            renderer: 'multi',
            width: 725,
            height: 200,
            dotSize: 5,
            series: [
                {
                    name: 'values',
                    data: values,
                    color: '#008CFF',
                    renderer: 'stack'
                // }
                }, {
                    name: 'averages',
                    data: avgs,
                    color: 'rgba(255, 127, 0, 0.4)',
                    renderer: 'line'
                }
            ]
        } );

        socket.on('sentiment', function(data) {
            console.log('sentiment');
            console.dir(data);
            updateScore(data);
        });
        socket.on('transcription', function(data) {
            console.log('transcription');
            console.dir(data);
            showResult(data);
            updateScore(data);
        });

        var updateScore = function(data) {
            var score = parseInt(data);
            console.log("Updating progress bar");
            
            var currentFaceAvg = avgs[avgs.length-1];
            var normCurrentFaceAvg = currentFaceAvg * 300;
            console.log(normCurrentFaceAvg);
            $("#progress_1").css("width", 50 + normCurrentFaceAvg + Math.floor((Math.random() * 50)));
            // var currentSentimentAvg = Math.random() * 50;
            // var total = normCUrrentFaceAvg + currentSentimentAvg;
            // document.getElementById('final-score').innerHTML = total;
        }

        function showResult(data) {
            var transcript = $('#speech-text');
            if (data.results && data.results.length > 0) {
                if (data.results.length === 1 ) {
                    var paragraph = transcript.children().last(),
                    text = data.results[0].alternatives[0].transcript || '';

                    //Capitalize first word
                    text = text.charAt(0).toUpperCase() + text.substring(1);
                    // if final results, append a new paragraph
                    if (data.results[0].final){
                        text = text.trim() + '.';
                        $('<p></p>').appendTo(transcript);
                    }
                    paragraph.text(text);
                }
                
                transcript.show();
            }
        }
    </script>
</html>
