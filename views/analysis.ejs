<!DOCTYPE html>
<html>
  <head>
    <title>Zenspace</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <script type='text/javascript', src='/js/browser-detect.js'></script>
    <script type='text/javascript', src='/js/jquery-1.11.1.min.js'></script>
    <script type='text/javascript', src='/js/speech-recognizer.js'></script>
    <script type='text/javascript', src='/js/socket.io.js'></script>
    <script type='text/javascript', src='/js/demo.js'></script>
    <script src="/js/utils.js"></script>
    <script src="/js/clmtrackr.min.js"></script>
    <script src="/js/model_pca_20_svm_emotionDetection.js"></script>
    <script src="/js/stats.min.js"></script>
    <script src="/js/d3.min.js"></script>
    <script src="/js/emotion_classifier.js"></script>
    <script src="/js/emotionmodel.js"></script>
    <script src="/js/d3.min.js"></script>
    <script src="/js/d3.layout.min.js"></script>
    <script src="/js/rickshaw.min.js"></script>
    <link href="css/materialize.css" type="text/css" rel="stylesheet" media="screen,projection" />
    <link href="css/style.css" type="text/css" rel="stylesheet" media="screen,projection" />
  </head>
  <style>
    #wrapper {
        margin: 0 auto;
        width: 100%;
    }
    #cont {
        margin-left: 200px;
    }
    #final-score {
        text-align: center;
        font-size: 100px;
    }
    #facial-chart {
        margin-left: auto;
        margin-right: auto;
        width: 100%;
        text-align: center;
        padding-top: 15px;
    }
  </style>

  <body>
    <% include layout.ejs %>
    <section class="left-adjust">

        <div class="container">
            <p id="final-score">0</p>
            <div id="facial-chart"></div>
            <div id="speech-text"></div>
        </div>

        <% include footer.ejs %>
    </section>
    <script>
        var socket = io.connect(this.ws);
        var avgs = [];
        var values = [];
        socket.on('identity', function(data) {
            socket.emit('identity', 'analysis');
        });
        socket.on('facial-analysis', function(data) {
            var value = {
                x: data.timestamp,
                y: data.current_value
            };
            var avg = {
                x: data.timestamp,
                y: data.average
            };
            values.push(value);
            avgs.push(avg);
            graph.render();
        });

        var graph = new Rickshaw.Graph( {
            element: document.getElementById("facial-chart"),
            renderer: 'multi',
            width: 600,
            height: 200,
            dotSize: 5,
            series: [
                {
                    name: 'values',
                    data: values,
                    color: '#008CFF',
                    renderer: 'stack'
                }
                // }, {
                //     name: 'averages',
                //     data: avgs,
                //     color: 'rgba(255, 127, 0, 0.4)',
                //     renderer: 'line'
                // }
            ]
        } );

        socket.on('sentiment', function(data){
            console.dir(data);
        });
        socket.on('transcription', function(data){
            console.dir(data);
            showResult(data);
        });

        function showResult(data) {
            var transcript = $('#speech-text');
            if (data.results && data.results.length > 0) {
                if (data.results.length === 1 ) {
                    var paragraph = transcript.children().last(),
                    text = data.results[0].alternatives[0].transcript || '';

                    //Capitalize first word
                    text = text.charAt(0).toUpperCase() + text.substring(1);
                    // if final results, append a new paragraph
                    if (data.results[0].final){
                        text = text.trim() + '.';
                        $('<p></p>').appendTo(transcript);
                    }
                    paragraph.text(text);
                }
                
                transcript.show();
            }
        }
    </script>
    </body>
</html>
